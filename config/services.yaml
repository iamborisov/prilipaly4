# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    my.custom.user_provider:
        class:        App\Security\Core\User\MyFOSUBUserProvider
        arguments: ['@fos_user.user_manager', { vk: vkId }]

    sonata.admin.maker:
        class: Sonata\AdminBundle\Maker\AdminMaker
        arguments: ['%kernel.project_dir%', ['@sonata.admin.manager.orm']]
        tags:
        - { name: maker.command }

    admin.product:
        class: App\Admin\ProductAdmin
        arguments: [~, App\Entity\Product, App\Controller\ProductAdminController]
        tags:
            - { name: sonata.admin, manager_type: orm, group: Контент, label: Продукты }
        public: true

    admin.participant:
        class: App\Admin\ParticipantAdmin
        arguments: [~, App\Entity\Participant, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, group: Контент, label: Участники }
        public: true

    admin.city:
        class: App\Admin\CityAdmin
        arguments: [~, App\Entity\City, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, group: Геоданные, label: Города }
        public: true

    admin.area:
        class: App\Admin\AreaAdmin
        arguments: [~, App\Entity\Area, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, group: Геоданные, label: Области }
        public: true

    admin.region:
        class: App\Admin\RegionAdmin
        arguments: [~, App\Entity\Region, ~]
        tags:
        - { name: sonata.admin, manager_type: orm, group: Геоданные, label: Округа }
        public: true